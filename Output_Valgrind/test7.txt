taylor@taylor-VirtualBox:~/valgrind$ valgrind --tool=memcheck --leak-check=yes --show-reachable=yes --num-callers=20 --track-fds=yes ./test7
==3309== Memcheck, a memory error detector
==3309== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3309== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3309== Command: ./test7
==3309== 
==3309== Use of uninitialised value of size 8
==3309==    at 0x109135: main (test7.c:6)
==3309== 
==3309== Invalid read of size 4
==3309==    at 0x109135: main (test7.c:6)
==3309==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==3309== 
==3309== 
==3309== Process terminating with default action of signal 11 (SIGSEGV)
==3309==  Access not within mapped region at address 0x0
==3309==    at 0x109135: main (test7.c:6)
==3309==  If you believe this happened as a result of a stack
==3309==  overflow in your program's main thread (unlikely but
==3309==  possible), you can try to increase the size of the
==3309==  main thread stack using the --main-stacksize= flag.
==3309==  The main thread stack size used in this run was 8388608.
==3309== 
==3309== FILE DESCRIPTORS: 3 open at exit.
==3309== Open file descriptor 2: /dev/pts/0
==3309==    <inherited from parent>
==3309== 
==3309== Open file descriptor 1: /dev/pts/0
==3309==    <inherited from parent>
==3309== 
==3309== Open file descriptor 0: /dev/pts/0
==3309==    <inherited from parent>
==3309== 
==3309== 
==3309== HEAP SUMMARY:
==3309==     in use at exit: 0 bytes in 0 blocks
==3309==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==3309== 
==3309== All heap blocks were freed -- no leaks are possible
==3309== 
==3309== Use --track-origins=yes to see where uninitialised values come from
==3309== For lists of detected and suppressed errors, rerun with: -s
==3309== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Segmentation fault (core dumped)
